plugins {
	id 'org.springframework.boot' version '2.4.0-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'eclipse'
	id 'idea'
	id 'groovy'
	id 'com.palantir.docker' version '0.19.2'
	id 'com.avast.gradle.docker-compose' version "0.12.1"
}

bootJar {
	archiveBaseName = 'assignment-helmes'
	archiveVersion = '1.0'
	archiveExtension = 'jar'
	archiveFileName = "${archiveBaseName.get()}-${archiveVersion.get()}.${archiveExtension.get()}"
}
// Used by 'Spring Boot Gradle Plugin' in combination with 'Devtools' makes HTML/JS/CSS reloadable.
bootRun {
	sourceResources sourceSets.main
}

group = 'ee.helmes'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11' // 14

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
	jcenter()
}

dependencies {
	// SPRING-BOOT:
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	developmentOnly('org.springframework.boot:spring-boot-devtools')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-data-rest')
	// LOMBOK ANNOTATIONS:
	compileOnly('org.projectlombok:lombok:1.18.12')
	annotationProcessor('org.projectlombok:lombok:1.18.12')
	testImplementation('org.projectlombok:lombok:1.18.12')
	testAnnotationProcessor('org.projectlombok:lombok:1.18.12')
	// DATABASE
	runtimeOnly('com.h2database:h2')
//	implementation('org.postgresql:postgresql:42.2.12')
//	implementation('com.vladmihalcea:hibernate-types-52:2.9.12')
	// DATABASE CHANGELOGS
	implementation('org.liquibase:liquibase-core:4.0.0')
	// UTILS
	implementation('org.apache.commons:commons-lang3:3.10')
	// implementation('commons-io:commons-io:2.7')
	// LOGGING
	implementation('log4j:log4j:1.2.17')
	implementation('org.codehaus.groovy:groovy-all:3.0.4')
	implementation('org.slf4j:slf4j-api:1.7.30')
	implementation('org.springdoc:springdoc-openapi-ui:1.4.0')
	implementation('org.springframework.boot:spring-boot-configuration-processor')
	annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')

	testImplementation('org.junit.jupiter:junit-jupiter-api:5.7.0-M1')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
}

test {
	useJUnitPlatform()
}